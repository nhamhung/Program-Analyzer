1 - Select statements
stmt s;
Select s
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
5000
2 - Select assign
assign a;
Select a
3, 7, 16, 23, 27, 28, 29, 32, 33, 39, 46, 47, 49, 50, 59, 73, 74, 79, 82, 89, 90, 96, 106, 113, 117, 118, 119, 120, 125, 126, 131, 136, 142, 143, 145, 146, 149, 174
5000
3 - Select constants
constant c;
Select c
9, 15, 21, 25, 66, 77, 84, 86, 92, 94, 100, 102, 119, 133, 142, 183, 184, 205, 213, 214, 218, 220, 221, 263, 268, 270, 275, 279, 285, 308, 312, 331, 332, 349, 368, 388, 392, 395, 418, 424, 429, 431, 432, 433, 445, 450, 451, 457, 469, 484, 512, 516, 520, 525, 546, 547, 550, 551, 552, 562, 573, 583, 592, 630, 631, 633, 636, 650, 657, 681, 684, 698, 707, 744, 753, 764, 769, 772, 773, 774, 809, 829, 834, 842, 843, 845, 850, 853, 863, 894, 897, 900, 906, 909, 913, 920, 922, 927, 931, 945, 969, 984, 985, 993, 997, 998
5000
4 - Select variables
variable v;
Select v
a, b, c, d, e, f, g, h, i, j, cap00
5000
5 - Select procedures
procedure p;
Select p
P1, cap00, P3, P4, P5
5000
6 - Select print
print pn;
Select pn
2, 8, 13, 19, 22, 31, 36, 37, 38, 43, 44, 45, 54, 58, 60, 67, 76, 81, 85, 91, 93, 102, 103, 108, 121, 139, 147, 159, 161, 164, 166, 168, 170, 173, 175
5000
7 - Select read
read r;
Select r
1, 10, 21, 30, 35, 57, 62, 66, 71, 72, 75, 83, 84, 86, 92, 95, 99, 104, 105, 107, 110, 112, 115, 127, 128, 130, 133, 134, 135, 137, 138, 148, 150, 151, 154, 155, 156, 160, 163, 165, 167, 176
5000
8 - Select call
call cl;
Select cl
9, 11, 12, 17, 18, 20, 26, 48, 52, 53, 56, 64, 68, 70, 77, 80, 97, 98, 101, 111, 122, 123, 124, 153, 158, 162, 169
5000
9 - Select while
while w;
Select w
4, 5, 14, 15, 34, 41, 51, 55, 63, 78, 94, 109, 129, 132, 141, 152, 171, 172
5000
10 - Select if
if ifs;
Select ifs
6, 24, 25, 40, 42, 61, 65, 69, 87, 88, 100, 114, 116, 140, 144, 157
5000
11 - Select stmt.stmt#
stmt s;
Select s.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
5000
12 - Select assign.stmt#
assign a;
Select a.stmt#
3, 7, 16, 23, 27, 28, 29, 32, 33, 39, 46, 47, 49, 50, 59, 73, 74, 79, 82, 89, 90, 96, 106, 113, 117, 118, 119, 120, 125, 126, 131, 136, 142, 143, 145, 146, 149, 174
5000
13 - Select constant.value
constant c;
Select c.value
9, 15, 21, 25, 66, 77, 84, 86, 92, 94, 100, 102, 119, 133, 142, 183, 184, 205, 213, 214, 218, 220, 221, 263, 268, 270, 275, 279, 285, 308, 312, 331, 332, 349, 368, 388, 392, 395, 418, 424, 429, 431, 432, 433, 445, 450, 451, 457, 469, 484, 512, 516, 520, 525, 546, 547, 550, 551, 552, 562, 573, 583, 592, 630, 631, 633, 636, 650, 657, 681, 684, 698, 707, 744, 753, 764, 769, 772, 773, 774, 809, 829, 834, 842, 843, 845, 850, 853, 863, 894, 897, 900, 906, 909, 913, 920, 922, 927, 931, 945, 969, 984, 985, 993, 997, 998
5000
14 - Select variable.varName
variable v;
Select v.varName
a, b, c, d, e, f, g, h, i, j, cap00
5000
15 - Select procedure.procName
procedure p;
Select p.procName
P1, cap00, P3, P4, P5
5000
16 - Select print.stmt#
print pn;
Select pn.stmt#
2, 8, 13, 19, 22, 31, 36, 37, 38, 43, 44, 45, 54, 58, 60, 67, 76, 81, 85, 91, 93, 102, 103, 108, 121, 139, 147, 159, 161, 164, 166, 168, 170, 173, 175
5000
17 - Select print.varName
print pn;
Select pn.varName
a, b, c, d, f, g, h, i, j, cap00
5000
18 - Select read.stmt#
read r;
Select r.stmt#
1, 10, 21, 30, 35, 57, 62, 66, 71, 72, 75, 83, 84, 86, 92, 95, 99, 104, 105, 107, 110, 112, 115, 127, 128, 130, 133, 134, 135, 137, 138, 148, 150, 151, 154, 155, 156, 160, 163, 165, 167, 176
5000
19 - Select read.varName
read r;
Select r.varName
a, b, c, d, e, f, g, h, i, j
5000
20 - Select call.stmt#
call cl;
Select cl.stmt#
9, 11, 12, 17, 18, 20, 26, 48, 52, 53, 56, 64, 68, 70, 77, 80, 97, 98, 101, 111, 122, 123, 124, 153, 158, 162, 169
5000
21 - Select call.procName
call cl;
Select cl.procName
cap00, P3, P4, P5
5000
22 - Select while.stmt#
while w;
Select w.stmt#
4, 5, 14, 15, 34, 41, 51, 55, 63, 78, 94, 109, 129, 132, 141, 152, 171, 172
5000
23 - Select if.stmt#
if ifs;
Select ifs.stmt#
6, 24, 25, 40, 42, 61, 65, 69, 87, 88, 100, 114, 116, 140, 144, 157
5000
24 - Select tuple single synonym
print pn;
Select <pn>
2, 8, 13, 19, 22, 31, 36, 37, 38, 43, 44, 45, 54, 58, 60, 67, 76, 81, 85, 91, 93, 102, 103, 108, 121, 139, 147, 159, 161, 164, 166, 168, 170, 173, 175
5000
25 - Select tuple different synonyms
print pn; while w;
Select <pn, w>
2 4, 2 5, 2 14, 2 15, 2 34, 2 41, 2 51, 2 55, 2 63, 2 78, 2 94, 2 109, 2 129, 2 132, 2 141, 2 152, 2 171, 2 172, 8 4, 8 5, 8 14, 8 15, 8 34, 8 41, 8 51, 8 55, 8 63, 8 78, 8 94, 8 109, 8 129, 8 132, 8 141, 8 152, 8 171, 8 172, 13 4, 13 5, 13 14, 13 15, 13 34, 13 41, 13 51, 13 55, 13 63, 13 78, 13 94, 13 109, 13 129, 13 132, 13 141, 13 152, 13 171, 13 172, 19 4, 19 5, 19 14, 19 15, 19 34, 19 41, 19 51, 19 55, 19 63, 19 78, 19 94, 19 109, 19 129, 19 132, 19 141, 19 152, 19 171, 19 172, 22 4, 22 5, 22 14, 22 15, 22 34, 22 41, 22 51, 22 55, 22 63, 22 78, 22 94, 22 109, 22 129, 22 132, 22 141, 22 152, 22 171, 22 172, 31 4, 31 5, 31 14, 31 15, 31 34, 31 41, 31 51, 31 55, 31 63, 31 78, 31 94, 31 109, 31 129, 31 132, 31 141, 31 152, 31 171, 31 172, 36 4, 36 5, 36 14, 36 15, 36 34, 36 41, 36 51, 36 55, 36 63, 36 78, 36 94, 36 109, 36 129, 36 132, 36 141, 36 152, 36 171, 36 172, 37 4, 37 5, 37 14, 37 15, 37 34, 37 41, 37 51, 37 55, 37 63, 37 78, 37 94, 37 109, 37 129, 37 132, 37 141, 37 152, 37 171, 37 172, 38 4, 38 5, 38 14, 38 15, 38 34, 38 41, 38 51, 38 55, 38 63, 38 78, 38 94, 38 109, 38 129, 38 132, 38 141, 38 152, 38 171, 38 172, 43 4, 43 5, 43 14, 43 15, 43 34, 43 41, 43 51, 43 55, 43 63, 43 78, 43 94, 43 109, 43 129, 43 132, 43 141, 43 152, 43 171, 43 172, 44 4, 44 5, 44 14, 44 15, 44 34, 44 41, 44 51, 44 55, 44 63, 44 78, 44 94, 44 109, 44 129, 44 132, 44 141, 44 152, 44 171, 44 172, 45 4, 45 5, 45 14, 45 15, 45 34, 45 41, 45 51, 45 55, 45 63, 45 78, 45 94, 45 109, 45 129, 45 132, 45 141, 45 152, 45 171, 45 172, 54 4, 54 5, 54 14, 54 15, 54 34, 54 41, 54 51, 54 55, 54 63, 54 78, 54 94, 54 109, 54 129, 54 132, 54 141, 54 152, 54 171, 54 172, 58 4, 58 5, 58 14, 58 15, 58 34, 58 41, 58 51, 58 55, 58 63, 58 78, 58 94, 58 109, 58 129, 58 132, 58 141, 58 152, 58 171, 58 172, 60 4, 60 5, 60 14, 60 15, 60 34, 60 41, 60 51, 60 55, 60 63, 60 78, 60 94, 60 109, 60 129, 60 132, 60 141, 60 152, 60 171, 60 172, 67 4, 67 5, 67 14, 67 15, 67 34, 67 41, 67 51, 67 55, 67 63, 67 78, 67 94, 67 109, 67 129, 67 132, 67 141, 67 152, 67 171, 67 172, 76 4, 76 5, 76 14, 76 15, 76 34, 76 41, 76 51, 76 55, 76 63, 76 78, 76 94, 76 109, 76 129, 76 132, 76 141, 76 152, 76 171, 76 172, 81 4, 81 5, 81 14, 81 15, 81 34, 81 41, 81 51, 81 55, 81 63, 81 78, 81 94, 81 109, 81 129, 81 132, 81 141, 81 152, 81 171, 81 172, 85 4, 85 5, 85 14, 85 15, 85 34, 85 41, 85 51, 85 55, 85 63, 85 78, 85 94, 85 109, 85 129, 85 132, 85 141, 85 152, 85 171, 85 172, 91 4, 91 5, 91 14, 91 15, 91 34, 91 41, 91 51, 91 55, 91 63, 91 78, 91 94, 91 109, 91 129, 91 132, 91 141, 91 152, 91 171, 91 172, 93 4, 93 5, 93 14, 93 15, 93 34, 93 41, 93 51, 93 55, 93 63, 93 78, 93 94, 93 109, 93 129, 93 132, 93 141, 93 152, 93 171, 93 172, 102 4, 102 5, 102 14, 102 15, 102 34, 102 41, 102 51, 102 55, 102 63, 102 78, 102 94, 102 109, 102 129, 102 132, 102 141, 102 152, 102 171, 102 172, 103 4, 103 5, 103 14, 103 15, 103 34, 103 41, 103 51, 103 55, 103 63, 103 78, 103 94, 103 109, 103 129, 103 132, 103 141, 103 152, 103 171, 103 172, 108 4, 108 5, 108 14, 108 15, 108 34, 108 41, 108 51, 108 55, 108 63, 108 78, 108 94, 108 109, 108 129, 108 132, 108 141, 108 152, 108 171, 108 172, 121 4, 121 5, 121 14, 121 15, 121 34, 121 41, 121 51, 121 55, 121 63, 121 78, 121 94, 121 109, 121 129, 121 132, 121 141, 121 152, 121 171, 121 172, 139 4, 139 5, 139 14, 139 15, 139 34, 139 41, 139 51, 139 55, 139 63, 139 78, 139 94, 139 109, 139 129, 139 132, 139 141, 139 152, 139 171, 139 172, 147 4, 147 5, 147 14, 147 15, 147 34, 147 41, 147 51, 147 55, 147 63, 147 78, 147 94, 147 109, 147 129, 147 132, 147 141, 147 152, 147 171, 147 172, 159 4, 159 5, 159 14, 159 15, 159 34, 159 41, 159 51, 159 55, 159 63, 159 78, 159 94, 159 109, 159 129, 159 132, 159 141, 159 152, 159 171, 159 172, 161 4, 161 5, 161 14, 161 15, 161 34, 161 41, 161 51, 161 55, 161 63, 161 78, 161 94, 161 109, 161 129, 161 132, 161 141, 161 152, 161 171, 161 172, 164 4, 164 5, 164 14, 164 15, 164 34, 164 41, 164 51, 164 55, 164 63, 164 78, 164 94, 164 109, 164 129, 164 132, 164 141, 164 152, 164 171, 164 172, 166 4, 166 5, 166 14, 166 15, 166 34, 166 41, 166 51, 166 55, 166 63, 166 78, 166 94, 166 109, 166 129, 166 132, 166 141, 166 152, 166 171, 166 172, 168 4, 168 5, 168 14, 168 15, 168 34, 168 41, 168 51, 168 55, 168 63, 168 78, 168 94, 168 109, 168 129, 168 132, 168 141, 168 152, 168 171, 168 172, 170 4, 170 5, 170 14, 170 15, 170 34, 170 41, 170 51, 170 55, 170 63, 170 78, 170 94, 170 109, 170 129, 170 132, 170 141, 170 152, 170 171, 170 172, 173 4, 173 5, 173 14, 173 15, 173 34, 173 41, 173 51, 173 55, 173 63, 173 78, 173 94, 173 109, 173 129, 173 132, 173 141, 173 152, 173 171, 173 172, 175 4, 175 5, 175 14, 175 15, 175 34, 175 41, 175 51, 175 55, 175 63, 175 78, 175 94, 175 109, 175 129, 175 132, 175 141, 175 152, 175 171, 175 172
5000
26 - Select tuple same synonym
assign a;
Select <a, a>
3 3, 7 7, 16 16, 23 23, 27 27, 28 28, 29 29, 32 32, 33 33, 39 39, 46 46, 47 47, 49 49, 50 50, 59 59, 73 73, 74 74, 79 79, 82 82, 89 89, 90 90, 96 96, 106 106, 113 113, 117 117, 118 118, 119 119, 120 120, 125 125, 126 126, 131 131, 136 136, 142 142, 143 143, 145 145, 146 146, 149 149, 174 174
5000
27 - Select tuple synonym and attribute of different synonym
call cl; print pn;
Select <cl, pn.varName>
9 a, 9 b, 9 c, 9 d, 9 f, 9 g, 9 h, 9 i, 9 j, 9 cap00, 11 a, 11 b, 11 c, 11 d, 11 f, 11 g, 11 h, 11 i, 11 j, 11 cap00, 12 a, 12 b, 12 c, 12 d, 12 f, 12 g, 12 h, 12 i, 12 j, 12 cap00, 17 a, 17 b, 17 c, 17 d, 17 f, 17 g, 17 h, 17 i, 17 j, 17 cap00, 18 a, 18 b, 18 c, 18 d, 18 f, 18 g, 18 h, 18 i, 18 j, 18 cap00, 20 a, 20 b, 20 c, 20 d, 20 f, 20 g, 20 h, 20 i, 20 j, 20 cap00, 26 a, 26 b, 26 c, 26 d, 26 f, 26 g, 26 h, 26 i, 26 j, 26 cap00, 48 a, 48 b, 48 c, 48 d, 48 f, 48 g, 48 h, 48 i, 48 j, 48 cap00, 52 a, 52 b, 52 c, 52 d, 52 f, 52 g, 52 h, 52 i, 52 j, 52 cap00, 53 a, 53 b, 53 c, 53 d, 53 f, 53 g, 53 h, 53 i, 53 j, 53 cap00, 56 a, 56 b, 56 c, 56 d, 56 f, 56 g, 56 h, 56 i, 56 j, 56 cap00, 64 a, 64 b, 64 c, 64 d, 64 f, 64 g, 64 h, 64 i, 64 j, 64 cap00, 68 a, 68 b, 68 c, 68 d, 68 f, 68 g, 68 h, 68 i, 68 j, 68 cap00, 70 a, 70 b, 70 c, 70 d, 70 f, 70 g, 70 h, 70 i, 70 j, 70 cap00, 77 a, 77 b, 77 c, 77 d, 77 f, 77 g, 77 h, 77 i, 77 j, 77 cap00, 80 a, 80 b, 80 c, 80 d, 80 f, 80 g, 80 h, 80 i, 80 j, 80 cap00, 97 a, 97 b, 97 c, 97 d, 97 f, 97 g, 97 h, 97 i, 97 j, 97 cap00, 98 a, 98 b, 98 c, 98 d, 98 f, 98 g, 98 h, 98 i, 98 j, 98 cap00, 101 a, 101 b, 101 c, 101 d, 101 f, 101 g, 101 h, 101 i, 101 j, 101 cap00, 111 a, 111 b, 111 c, 111 d, 111 f, 111 g, 111 h, 111 i, 111 j, 111 cap00, 122 a, 122 b, 122 c, 122 d, 122 f, 122 g, 122 h, 122 i, 122 j, 122 cap00, 123 a, 123 b, 123 c, 123 d, 123 f, 123 g, 123 h, 123 i, 123 j, 123 cap00, 124 a, 124 b, 124 c, 124 d, 124 f, 124 g, 124 h, 124 i, 124 j, 124 cap00, 153 a, 153 b, 153 c, 153 d, 153 f, 153 g, 153 h, 153 i, 153 j, 153 cap00, 158 a, 158 b, 158 c, 158 d, 158 f, 158 g, 158 h, 158 i, 158 j, 158 cap00, 162 a, 162 b, 162 c, 162 d, 162 f, 162 g, 162 h, 162 i, 162 j, 162 cap00, 169 a, 169 b, 169 c, 169 d, 169 f, 169 g, 169 h, 169 i, 169 j, 169 cap00
5000
28 - Select tuple synonym and attributes of same synonym
read r;
Select <r, r.varName, r.stmt#>
1 d 1, 10 g 10, 21 h 21, 30 e 30, 35 a 35, 57 j 57, 62 b 62, 66 d 66, 71 d 71, 72 c 72, 75 d 75, 83 i 83, 84 b 84, 86 d 86, 92 c 92, 95 i 95, 99 a 99, 104 e 104, 105 d 105, 107 h 107, 110 h 110, 112 g 112, 115 f 115, 127 d 127,128 i 128,130 e 130, 133 i 133, 134 j 134, 135 c 135, 137 f 137, 138 i 138,148 f 148,150 g 150,151 f 151,154 g 154,155 a 155,156 i 156,160 e 160,163 h 163,165 g 165,167 j 167,176 a 176
5000
29 - Select tuple different attributes
while w; assign a;
Select <w.stmt#, a.stmt#>
4 3, 4 7, 4 16, 4 23, 4 27, 4 28, 4 29, 4 32, 4 33, 4 39, 4 46, 4 47, 4 49, 4 50, 4 59, 4 73, 4 74, 4 79, 4 82, 4 89, 4 90, 4 96, 4 106, 4 113, 4 117, 4 118, 4 119, 4 120, 4 125, 4 126, 4 131, 4 136, 4 142, 4 143, 4 145, 4 146, 4 149, 4 174, 5 3, 5 7, 5 16, 5 23, 5 27, 5 28, 5 29, 5 32, 5 33, 5 39, 5 46, 5 47, 5 49, 5 50, 5 59, 5 73, 5 74, 5 79, 5 82, 5 89, 5 90, 5 96, 5 106, 5 113, 5 117, 5 118, 5 119, 5 120, 5 125, 5 126, 5 131, 5 136, 5 142, 5 143, 5 145, 5 146, 5 149, 5 174, 14 3, 14 7, 14 16, 14 23, 14 27, 14 28, 14 29, 14 32, 14 33, 14 39, 14 46, 14 47, 14 49, 14 50, 14 59, 14 73, 14 74, 14 79, 14 82, 14 89, 14 90, 14 96, 14 106, 14 113, 14 117, 14 118, 14 119, 14 120, 14 125, 14 126, 14 131, 14 136, 14 142, 14 143, 14 145, 14 146, 14 149, 14 174, 15 3, 15 7, 15 16, 15 23, 15 27, 15 28, 15 29, 15 32, 15 33, 15 39, 15 46, 15 47, 15 49, 15 50, 15 59, 15 73, 15 74, 15 79, 15 82, 15 89, 15 90, 15 96, 15 106, 15 113, 15 117, 15 118, 15 119, 15 120, 15 125, 15 126, 15 131, 15 136, 15 142, 15 143, 15 145, 15 146, 15 149, 15 174, 34 3, 34 7, 34 16, 34 23, 34 27, 34 28, 34 29, 34 32, 34 33, 34 39, 34 46, 34 47, 34 49, 34 50, 34 59, 34 73, 34 74, 34 79, 34 82, 34 89, 34 90, 34 96, 34 106, 34 113, 34 117, 34 118, 34 119, 34 120, 34 125, 34 126, 34 131, 34 136, 34 142, 34 143, 34 145, 34 146, 34 149, 34 174, 41 3, 41 7, 41 16, 41 23, 41 27, 41 28, 41 29, 41 32, 41 33, 41 39, 41 46, 41 47, 41 49, 41 50, 41 59, 41 73, 41 74, 41 79, 41 82, 41 89, 41 90, 41 96, 41 106, 41 113, 41 117, 41 118, 41 119, 41 120, 41 125, 41 126, 41 131, 41 136, 41 142, 41 143, 41 145, 41 146, 41 149, 41 174, 51 3, 51 7, 51 16, 51 23, 51 27, 51 28, 51 29, 51 32, 51 33, 51 39, 51 46, 51 47, 51 49, 51 50, 51 59, 51 73, 51 74, 51 79, 51 82, 51 89, 51 90, 51 96, 51 106, 51 113, 51 117, 51 118, 51 119, 51 120, 51 125, 51 126, 51 131, 51 136, 51 142, 51 143, 51 145, 51 146, 51 149, 51 174, 55 3, 55 7, 55 16, 55 23, 55 27, 55 28, 55 29, 55 32, 55 33, 55 39, 55 46, 55 47, 55 49, 55 50, 55 59, 55 73, 55 74, 55 79, 55 82, 55 89, 55 90, 55 96, 55 106, 55 113, 55 117, 55 118, 55 119, 55 120, 55 125, 55 126, 55 131, 55 136, 55 142, 55 143, 55 145, 55 146, 55 149, 55 174, 63 3, 63 7, 63 16, 63 23, 63 27, 63 28, 63 29, 63 32, 63 33, 63 39, 63 46, 63 47, 63 49, 63 50, 63 59, 63 73, 63 74, 63 79, 63 82, 63 89, 63 90, 63 96, 63 106, 63 113, 63 117, 63 118, 63 119, 63 120, 63 125, 63 126, 63 131, 63 136, 63 142, 63 143, 63 145, 63 146, 63 149, 63 174, 78 3, 78 7, 78 16, 78 23, 78 27, 78 28, 78 29, 78 32, 78 33, 78 39, 78 46, 78 47, 78 49, 78 50, 78 59, 78 73, 78 74, 78 79, 78 82, 78 89, 78 90, 78 96, 78 106, 78 113, 78 117, 78 118, 78 119, 78 120, 78 125, 78 126, 78 131, 78 136, 78 142, 78 143, 78 145, 78 146, 78 149, 78 174, 94 3, 94 7, 94 16, 94 23, 94 27, 94 28, 94 29, 94 32, 94 33, 94 39, 94 46, 94 47, 94 49, 94 50, 94 59, 94 73, 94 74, 94 79, 94 82, 94 89, 94 90, 94 96, 94 106, 94 113, 94 117, 94 118, 94 119, 94 120, 94 125, 94 126, 94 131, 94 136, 94 142, 94 143, 94 145, 94 146, 94 149, 94 174, 109 3, 109 7, 109 16, 109 23, 109 27, 109 28, 109 29, 109 32, 109 33, 109 39, 109 46, 109 47, 109 49, 109 50, 109 59, 109 73, 109 74, 109 79, 109 82, 109 89, 109 90, 109 96, 109 106, 109 113, 109 117, 109 118, 109 119, 109 120, 109 125, 109 126, 109 131, 109 136, 109 142, 109 143, 109 145, 109 146, 109 149, 109 174, 129 3, 129 7, 129 16, 129 23, 129 27, 129 28, 129 29, 129 32, 129 33, 129 39, 129 46, 129 47, 129 49, 129 50, 129 59, 129 73, 129 74, 129 79, 129 82, 129 89, 129 90, 129 96, 129 106, 129 113, 129 117, 129 118, 129 119, 129 120, 129 125, 129 126, 129 131, 129 136, 129 142, 129 143, 129 145, 129 146, 129 149, 129 174, 132 3, 132 7, 132 16, 132 23, 132 27, 132 28, 132 29, 132 32, 132 33, 132 39, 132 46, 132 47, 132 49, 132 50, 132 59, 132 73, 132 74, 132 79, 132 82, 132 89, 132 90, 132 96, 132 106, 132 113, 132 117, 132 118, 132 119, 132 120, 132 125, 132 126, 132 131, 132 136, 132 142, 132 143, 132 145, 132 146, 132 149, 132 174, 141 3, 141 7, 141 16, 141 23, 141 27, 141 28, 141 29, 141 32, 141 33, 141 39, 141 46, 141 47, 141 49, 141 50, 141 59, 141 73, 141 74, 141 79, 141 82, 141 89, 141 90, 141 96, 141 106, 141 113, 141 117, 141 118, 141 119, 141 120, 141 125, 141 126, 141 131, 141 136, 141 142, 141 143, 141 145, 141 146, 141 149, 141 174, 152 3, 152 7, 152 16, 152 23, 152 27, 152 28, 152 29, 152 32, 152 33, 152 39, 152 46, 152 47, 152 49, 152 50, 152 59, 152 73, 152 74, 152 79, 152 82, 152 89, 152 90, 152 96, 152 106, 152 113, 152 117, 152 118, 152 119, 152 120, 152 125, 152 126, 152 131, 152 136, 152 142, 152 143, 152 145, 152 146, 152 149, 152 174, 171 3, 171 7, 171 16, 171 23, 171 27, 171 28, 171 29, 171 32, 171 33, 171 39, 171 46, 171 47, 171 49, 171 50, 171 59, 171 73, 171 74, 171 79, 171 82, 171 89, 171 90, 171 96, 171 106, 171 113, 171 117, 171 118, 171 119, 171 120, 171 125, 171 126, 171 131, 171 136, 171 142, 171 143, 171 145, 171 146, 171 149, 171 174, 172 3, 172 7, 172 16, 172 23, 172 27, 172 28, 172 29, 172 32, 172 33, 172 39, 172 46, 172 47, 172 49, 172 50, 172 59, 172 73, 172 74, 172 79, 172 82, 172 89, 172 90, 172 96, 172 106, 172 113, 172 117, 172 118, 172 119, 172 120, 172 125, 172 126, 172 131, 172 136, 172 142, 172 143, 172 145, 172 146, 172 149, 172 174
5000
30 - Select tuple repeated attributes
if ifs;
Select <ifs.stmt#, ifs.stmt#, ifs.stmt#, ifs.stmt#>
6 6 6 6, 24 24 24 24, 25 25 25 25, 40 40 40 40, 42 42 42 42, 61 61 61 61, 65 65 65 65, 69 69 69 69, 87 87 87 87, 88 88 88 88, 100 100 100 100, 114 114 114 114, 116 116 116 116, 140 140 140 140, 144 144 144 144, 157 157 157 157
5000
31 - Select BOOLEAN

Select BOOLEAN
TRUE
5000
101 - Independent such that clauses, independent selection, result true
read r; while w; assign a, a1; stmt s, s1, s2;
Select r.varName such that Calls("P5", "P4") and Parent*(w, a) and Next*(2, s) and Follows*(s1, s2) and Affects(a1, _)
a, b, c, d, e, f, g, h, i, j
5000
102 - Independent such that clauses, independent selection, result false
while w; stmt s1, s2; assign a; constant c;
Select c such that Follows*(s1, _) and Next*(s2, _) and Affects*(a, _) and Parent(w, w)
none
5000
103 - Similar param such that clauses, dependent selection, result true
stmt s, s1; assign a, a1;
Select a1 such that Next*(s, s1) and Parent(s, s1) and Affects*(a, a1) and Follows(a, a1)
28, 33, 120, 143
5000
104 - Similar param such that clauses, dependent selection, result false
assign a; variable v; while w;
Select BOOLEAN such that Modifies(a, v) and Uses(a, v) and Follows*(w, a) and Parent*(w, a)
FALSE
5000
105 - Such that clauses with identical parameters, result true
assign a;
Select a such that Next*(a, a) and Affects*(a, a)
32, 33, 96, 131
5000
106 - Such that clauses with identical parameters, result false
stmt s; assign a;
Select s such that Next*(a, a) and Affects*(a, a) and Parent(s, s)
none
5000
107 - Such that clause with overlapping parameters, dependent tuple selection, result true
while w; print pn; stmt s; variable v, v1; assign a, a1;
Select <w, pn, a1, v1> such that Parent(w, s) and Uses(s, v) and Next*(s, a) and Follows(s, pn) and Follows*(27, a1) and Modifies(a1, v1)
4 38 28 b, 5 13 28 b, 15 19 28 b, 34 37 28 b, 51 54 28 b, 55 60 28 b, 78 81 28 b, 171 175 28 b, 4 38 29 c, 5 13 29 c, 15 19 29 c, 34 37 29 c, 51 54 29 c, 55 60 29 c, 78 81 29 c, 171 175 29 c
5000
108 - Such that clause with overlapping parameters, dependent selection, result false
if ifs, ifs1; read r;
Select r such that Parent(ifs, ifs1) and Parent(ifs1, r) and Modifies(r, "f")
none
5000
109 - Wildcard such that clauses, result true
assign a1; stmt s;
Select BOOLEAN such that Calls*("P3", _) and Affects*(a1, _) and Affects*(_, a1) and Next(_, s) and Follows*(s, _) and Next*(_, _)
TRUE
5000
110 - Wildcard such that clauses, return false

Select BOOLEAN such that Next(_, 171) and Affects*(136, _)
FALSE
5000
111 - Pattern clauses, independent evaluation, complex expressions, return true
assign a, a1; while w; if ifs;
Select <a, a1> pattern a(_, _"g * a / (863 - 279 / i)"_) and a1(_, "j + 853 - ((92 * 263) / (h + a % f)) + 772 % 842 % (e + 512 % 368) * i") and w("e", _) and ifs("g", _, _)
49 59
5000
112 - Pattern clauses, independent evaluation, complex expressions, return false
assign a; while w;
Select BOOLEAN pattern a("c", _"275 * i + 897 % (d) % f"_) and w(_, _)
FALSE
5000
113 - Pattern clauses, dependent evaluation, dependent selection, return true
assign a; variable v; while w; if ifs;
Select a pattern a(_, _"c - h"_) and a(v, _) and w(v, _) and ifs(v, _, _)
32
5000
121 - With clauses, independent evaluation, independent selection, return true
print pn; call cl; stmt s; assign a;
Select a with 1 = 1 and "a" = "a" and "cap00" = pn.varName and cl.procName = "cap00" and s.stmt# = 14
3, 7, 16, 23, 27, 28, 29, 32, 33, 39, 46, 47, 49, 50, 59, 73, 74, 79, 82, 89, 90, 96, 106, 113, 117, 118, 119, 120, 125, 126, 131, 136, 142, 143, 145, 146, 149, 174
5000
122 - With clauses, independent evaluation, independent selection, return false
call cl; assign a;
Select cl with 1 = 1 and cl.procName = "P3" and a.stmt# = 173
none
5000
123 - With clauses, independent evaluation, dependent selection, return false
call cl;
Select cl with 0 = 0 and 1 = "1"
none
5000
124 - With clauses, dependent evaluation, selection dependent, return true
stmt s; constant c; read r;
Select <r.stmt#, r.varName> with r.varName = "b" and r.stmt# = s.stmt# and s.stmt# = c.value
84 b
5000
125 - With clauses, dependent evaluation, selection dependent, return false
print pn; read r; assign a; stmt s, s1; constant c;
Select r with pn.varName = r.varName and s.stmt# = s1.stmt# and c.value = s.stmt# and s1.stmt# = a.stmt# and s.stmt# = pn.stmt#
none
5000
126 - With clauses similar params return true
print pn; read r; constant c; prog_line n; assign a; call cl; while w; if ifs;
Select BOOLEAN with pn.varName = pn.varName and r.varName = r.varName and cl.procName = cl.procName and c.value = c.value and n = n and a.stmt# = a.stmt# and w.stmt# = w.stmt# and ifs.stmt# = ifs.stmt#
TRUE
5000
131 - Such that + pattern clauses, independent evaluation, independent selection, return true
constant c; prog_line n; assign a, a1; variable v, v1; while w; if ifs;
Select c.value such that Next(176, n) such that Affects(a, 174) pattern a1(v, _"e%e%c"_) pattern w(v1, _) pattern ifs("a", _, _) pattern ifs("g", _, _)
9, 15, 21, 25, 66, 77, 84, 86, 92, 94, 100, 102, 119, 133, 142, 183, 184, 205, 213, 214, 218, 220, 221, 263, 268, 270, 275, 279, 285, 308, 312, 331, 332, 349, 368, 388, 392, 395, 418, 424, 429, 431, 432, 433, 445, 450, 451, 457, 469, 484, 512, 516, 520, 525, 546, 547, 550, 551, 552, 562, 573, 583, 592, 630, 631, 633, 636, 650, 657, 681, 684, 698, 707, 744, 753, 764, 769, 772, 773, 774, 809, 829, 834, 842, 843, 845, 850, 853, 863, 894, 897, 900, 906, 909, 913, 920, 922, 927, 931, 945, 969, 984, 985, 993, 997, 998
5000
132 - Such that + pattern clauses, dependent evaluation, independent selection, return false
variable v; while w; if ifs, ifs1, ifs2; assign a, a1;
Select BOOLEAN such that Parent(ifs, ifs1) and Parent(ifs1, ifs2) and Next(ifs2, a) and Uses(a, "g") and Uses(a1, v) and Modifies(a1, v) pattern w(v, _) pattern ifs2(v, _, _)
FALSE
5000
133 - Such that + pattern clauses, dependent evaluation, dependent selection, return true
procedure p, p1, p2; variable v; while w; prog_line n;
Select <w.stmt#, v.varName, v> such that Follows*(140, n) and Parent*(n, w) pattern w(v, _)
172 g g, 172 c c
5000
134 - Such that + pattern clauses, dependent evaluation, dependent selection, return false
variable v; procedure p; assign a;
Select v such that Calls("P5", p) and Modifies(p, v) pattern a(v, _"g - j - f / c"_)
none
5000
135 - Such that + pattern clauses, wildcard clauses, return true
assign a;
Select a such that Affects(a, _) and Next(a, _) and Follows(_, a) and Parent(_, a) and Uses(a, _) pattern a(_, _)
27,29,32,33,47,49,50,59,96,126,131,143
5000
141 - Such that + with clauses, independent evaluation, independent selection, return true]
variable v;
Select v such that Affects(96, 96) and Next(87, 94) with "a" = "a" and 0 = 0
a, b, c, d, e, f, g, h, i, j, cap00
5000
142 - Such that + with clauses, independent evaluation, dependent selection, return true
assign a, a1; if ifs; stmt s; while w; prog_line n;
Select w such that Affects(a, a1) and Next(a, a1) with ifs.stmt# = s.stmt# and w.stmt# = n
4, 5, 14, 15, 34, 41, 51, 55, 63, 78, 94, 109, 129, 132, 141, 152, 171, 172
5000
143 - Such that + with clauses, dependent evaluation, dependent selection, return true
assign a; variable v; print pn; prog_line n; if ifs; call cl;
Select <a.stmt#, v, pn.stmt#, pn.varName> such that Follows(pn, n) and Parent(ifs, n) and Parent(ifs, a) and Uses(a, v) with cl.stmt# = n with pn.varName = v.varName
7 i 8 i, 118 d 121 d, 74 f 76 f
5000
144 - Such that + with clauses, dependent evaluation, return false
prog_line n; while w; assign a;
Select BOOLEAN such that Next*(n, n) with n = w.stmt# such that Affects(n, a)
FALSE
5000
151 - Pattern + with clauses, independent evaluation, return true
while w; assign a; if ifs; variable v, v1; procedure p; read r;
Select r pattern a(_, _) pattern w(_, _) pattern ifs(v, _, _) with v1.varName = p.procName with r.stmt# = 10
10
5000
152 - Pattern + with clauses, independent evaluation, return false
assign a; variable v; if ifs; procedure p; constant c;
Select BOOLEAN pattern a(v, _) pattern ifs(_, _, _) with p.procName = c.value
FALSE
5000
153 - Pattern + with clauses, dependent evaluation, selection independent, return true
while w; assign a; print pn; variable v;
Select <w.stmt#, pn.varName> pattern w(v, _) with pn.varName = v.varName pattern a(v, _) with v.varName = "b"
41 b, 129 b, 132 b
5000
154 - Pattern + with clauses, dependent evaluation, return false
while w; variable v, v1; if ifs; call cl;
Select BOOLEAN pattern w(v, _) pattern ifs(v1, _, _) with v.varName = v1.varName with v1.varName = cl.procName
FALSE
5000
161 - All clauses, independent evaluation, independent selection, return true
procedure p; assign a; variable v, v1; if ifs;
Select p.procName such that Affects*(131, 131) and Next(121, 122) pattern a(v, _"15*f"_) pattern ifs(_, _, _) with "cap01" = "cap01" with v1.varName = "cap00"
P1, cap00, P3, P4, P5
5000
162 - All clauses, dependent evaluation, dependent selection, return true
while w; constant c; assign a; prog_line n; variable v; call cl;
Select <cl> such that Parent(w, a) and Follows*(a, n) pattern a(v, _) with w.stmt# = c.value with n = cl.stmt# and n = n
17, 18, 20
5000
163 - All clauses, dependent evaluation, dependent selection, return true
while w; call cl; variable v;
Select <w.stmt#, cl.stmt#, v> such that Parent*(w, cl) and Modifies(w, v) with cl.procName = "cap00" pattern w(v, _)
4 9 a, 4 12 a, 5 9 g, 5 12 g, 5 9 i, 5 12 i
5000


